package ui;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Directory;
import model.EmployeeDetails;


/**
 *
 * @author jurreyyahfirdawsmohammad
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    Directory directory;
    EmployeeDetails details;
    ArrayList<Directory> tableContents;
    
    public ViewJPanel(EmployeeDetails details, Directory directory) {
        initComponents();
        
        this.directory = directory;
        this.details = details;
        this.tableContents = new ArrayList<>();
        
        populateTable();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEmailID = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblEID = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtEID = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtEmailID = new javax.swing.JTextField();
        txtStartDate = new javax.swing.JTextField();
        lblLevel = new javax.swing.JLabel();
        lblTI = new javax.swing.JLabel();
        txtLevel = new javax.swing.JTextField();
        txtTI = new javax.swing.JTextField();
        lblPositionTitle = new javax.swing.JLabel();
        txtPositionTitle = new javax.swing.JTextField();
        lblContact = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tEmployee = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        txtGender = new javax.swing.JTextField();
        txtSearchbyName = new javax.swing.JTextField();
        btnSearchbyName = new javax.swing.JButton();
        txtSearchbyPosTitle = new javax.swing.JTextField();
        btnSearchbyPosTitle = new javax.swing.JButton();
        txtSearchbyID = new javax.swing.JTextField();
        btnSearchbyID = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createCompoundBorder());

        lblEmailID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblEmailID.setText("Email Address");

        lblName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblName.setText("Name");

        lblEID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblEID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblEID.setText("Employee ID");

        lblAge.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblAge.setText("Age");

        lblGender.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblGender.setText("Gender");

        lblStartDate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblStartDate.setText("Start Date ");

        txtName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtEID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtEID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEIDActionPerformed(evt);
            }
        });

        txtAge.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        txtEmailID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtEmailID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailIDActionPerformed(evt);
            }
        });

        txtStartDate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStartDateActionPerformed(evt);
            }
        });

        lblLevel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblLevel.setText("Level");

        lblTI.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblTI.setText("Team Info ");

        txtLevel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLevelActionPerformed(evt);
            }
        });

        txtTI.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtTI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTIActionPerformed(evt);
            }
        });

        lblPositionTitle.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblPositionTitle.setText("Position Title ");

        txtPositionTitle.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtPositionTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPositionTitleActionPerformed(evt);
            }
        });

        lblContact.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblContact.setText("Contact Info");

        lblPhone.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblPhone.setText("Contact Number");

        txtPhone.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        lblTitle.setText("Employee Profile");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        tEmployee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        tEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Age", "Gender", "Start Date", "Level", "Team Info", "Position Title", "Mobile Number", "Email Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tEmployee);

        btnDelete.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDelete.setText("Delete ");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnUpdate.setText("Update ");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnView.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnView.setText("View ");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        txtGender.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderActionPerformed(evt);
            }
        });

        txtSearchbyName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnSearchbyName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSearchbyName.setText("Search by Name");
        btnSearchbyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyNameActionPerformed(evt);
            }
        });

        txtSearchbyPosTitle.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSearchbyPosTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchbyPosTitleActionPerformed(evt);
            }
        });

        btnSearchbyPosTitle.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSearchbyPosTitle.setText("Search by Position Title");
        btnSearchbyPosTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyPosTitleActionPerformed(evt);
            }
        });

        txtSearchbyID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSearchbyID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchbyIDActionPerformed(evt);
            }
        });

        btnSearchbyID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSearchbyID.setText("Search by ID");
        btnSearchbyID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGender)
                            .addComponent(lblStartDate)
                            .addComponent(lblEmailID)
                            .addComponent(lblPhone)
                            .addComponent(lblPositionTitle)
                            .addComponent(lblTI)
                            .addComponent(lblContact))
                        .addGap(487, 487, 487)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSearchbyPosTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearchbyID, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearchbyName, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearchbyID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchbyPosTitle, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSearchbyName, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEID)
                            .addComponent(lblAge)
                            .addComponent(lblLevel)
                            .addComponent(lblName))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTI, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPhone)
                                .addComponent(txtEmailID)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtEID, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(btnUpdate)
                        .addGap(66, 66, 66)
                        .addComponent(btnView)
                        .addGap(51, 51, 51)
                        .addComponent(btnDelete)))
                .addContainerGap(1762, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1012, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(330, 330, 330)
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 2489, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnUpdate, btnView});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtEmailID, txtPhone, txtPositionTitle, txtTI});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSearchbyID, btnSearchbyName, btnSearchbyPosTitle});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtAge, txtEID, txtGender, txtLevel, txtName, txtStartDate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEID)
                    .addComponent(txtEID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGender))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStartDate)
                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLevel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTI)
                            .addComponent(txtTI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearchbyID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchbyID))))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPositionTitle)
                    .addComponent(txtPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchbyPosTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchbyPosTitle))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblContact, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearchbyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearchbyName)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailID)
                    .addComponent(txtEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnView)
                    .addComponent(btnDelete))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(161, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnUpdate, btnView});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtAge, txtEID, txtEmailID, txtGender, txtName, txtPhone, txtPositionTitle, txtStartDate, txtTI});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSearchbyID, btnSearchbyName, btnSearchbyPosTitle});

    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtEmailIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailIDActionPerformed

    private void txtStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStartDateActionPerformed

    private void txtLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLevelActionPerformed

    private void txtTIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTIActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tEmployee.getSelectedRow();
        
        if (selectedRowIndex<0) {
            
            JOptionPane.showMessageDialog(this, "Select the Field to Delete.");
            return;
            
        }
        
        DefaultTableModel model = (DefaultTableModel) tEmployee.getModel();
        Directory selectedEmployee = (Directory) model.getValueAt(selectedRowIndex, 0);
        
        details.deleteEmployee(selectedEmployee);
        
        JOptionPane.showMessageDialog(this, "Details Deleted");
        
        populateTable();
        
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tEmployee.getSelectedRow();
        
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Select a Field");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tEmployee.getModel();
        Directory selectedEmployee = (Directory) model.getValueAt(selectedRowIndex, 0);
        
        
        txtName.setText(selectedEmployee.getName());  
        txtEID.setText(String.valueOf(selectedEmployee.getEmployeeID()));
        txtAge.setText(String.valueOf(selectedEmployee.getAge()));
        txtGender.setText(selectedEmployee.getGender());
        txtStartDate.setText(String.valueOf(selectedEmployee.getStartDate()));
        txtLevel.setText(selectedEmployee.getLevel());
        txtTI.setText(selectedEmployee.getTeamInfo());
        txtPositionTitle.setText(selectedEmployee.getPositionTitle());
        txtPhone.setText(String.valueOf(selectedEmployee.getPhone()));
        txtEmailID.setText(String.valueOf(selectedEmployee.getEmail()));
                
        populateTable();
        
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void tEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tEmployeeMouseClicked
        // TODO add your handling code here:
        
     
        
    }//GEN-LAST:event_tEmployeeMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) tEmployee.getModel();
         
        int selectedRowIndex = tEmployee.getSelectedRow();
        
        
        
        
        System.out.println(selectedRowIndex);
       
   
        if (tEmployee.getSelectedRowCount() == 1) {
            
            String Name = txtName.getText();
            String EmployeeID = txtEID.getText();
            String Age = txtAge.getText();
            String Gender = txtGender.getText();
            String StartDate = txtStartDate.getText();
            String Level = txtLevel.getText();
            String TeamInfo = txtTI.getText();
            String PositionTitle = txtPositionTitle.getText();
            String Phone = txtPhone.getText();
            String Email = txtEmailID.getText();
            
            
            
            
            
            model.setValueAt(Name, tEmployee.getSelectedRow(), 0);
            model.setValueAt(EmployeeID, tEmployee.getSelectedRow(), 1);
            model.setValueAt(Age, tEmployee.getSelectedRow(), 2);
            model.setValueAt(Gender, tEmployee.getSelectedRow(), 3);
            model.setValueAt(StartDate, tEmployee.getSelectedRow(), 4);
            model.setValueAt(Level, tEmployee.getSelectedRow(), 5);
            model.setValueAt(TeamInfo, tEmployee.getSelectedRow(), 6);
            model.setValueAt(PositionTitle, tEmployee.getSelectedRow(), 7);
            model.setValueAt(Phone, tEmployee.getSelectedRow(), 8);
            model.setValueAt(Email, tEmployee.getSelectedRow(), 9);
                    
            
            directory.setName(Name);
            System.out.println(EmployeeID);
            directory.setEmployeeID(Integer.parseInt(EmployeeID));
            directory.setAge(Integer.valueOf(Age));
            //directory.setGender(Gender);
            //Date date1 = null;
             //try {
                 // date1 = new SimpleDateFormat("yyyy-mm-dd").parse(StartDate);
            // } catch (ParseException ex) {
                 
            // }
            //directory.setStartDate(date1);
            directory.setLevel(Level);
            directory.setPositionTitle(PositionTitle);
            directory.setPhone(Phone);
            directory.setTeamInfo(TeamInfo);
            directory.setEmail(Email);
            
            JOptionPane.showMessageDialog(this, "Employee Details Updated Successfully.");
            
            
        } else {
            if (tEmployee.getRowCount() == 0){
                
                JOptionPane.showMessageDialog(this, "Table is empty.");
                
            } else {
                
                JOptionPane.showMessageDialog(this, "Please select a single row to update.");
                
            }
                
            
        }
        
           
        
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenderActionPerformed

    private void btnSearchbyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyNameActionPerformed
        // TODO add your handling code here:
        searchByName(txtSearchbyName.getText());
    }//GEN-LAST:event_btnSearchbyNameActionPerformed

    private void btnSearchbyPosTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyPosTitleActionPerformed
        // TODO add your handling code here:
        searchByPosTitle(txtSearchbyPosTitle.getText());
    }//GEN-LAST:event_btnSearchbyPosTitleActionPerformed

    private void txtSearchbyPosTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchbyPosTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchbyPosTitleActionPerformed

    private void btnSearchbyIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyIDActionPerformed
        // TODO add your handling code here:
        
        
        searchByID(Integer.valueOf(txtSearchbyID.getText()));
    }//GEN-LAST:event_btnSearchbyIDActionPerformed

    private void txtPositionTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPositionTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPositionTitleActionPerformed

    private void txtSearchbyIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchbyIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchbyIDActionPerformed

    private void txtEIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEIDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearchbyID;
    private javax.swing.JButton btnSearchbyName;
    private javax.swing.JButton btnSearchbyPosTitle;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblEID;
    private javax.swing.JLabel lblEmailID;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPositionTitle;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTI;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tEmployee;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEID;
    private javax.swing.JTextField txtEmailID;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPositionTitle;
    private javax.swing.JTextField txtSearchbyID;
    private javax.swing.JTextField txtSearchbyName;
    private javax.swing.JTextField txtSearchbyPosTitle;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTI;
    // End of variables declaration//GEN-END:variables


    private void populateTable() {
      
      DefaultTableModel model = (DefaultTableModel) tEmployee.getModel();
      model.setRowCount(0);
      
          for(Directory dir : details.getDetails()){
              Object[] row = new Object[10];
              row[0] = dir;
              row[1] = dir.getEmployeeID();
              row[2] = dir.getAge();
              row[3] = dir.getGender();
              row[4] = dir.getStartDate();
              row[5] = dir.getLevel();
              row[6] = dir.getTeamInfo();
              row[7] = dir.getPositionTitle();
              row[8] = dir.getPhone();
              row[9] = dir.getEmail();
              
              model.addRow(row);
              
              
          }
    }

    private void searchByName(String name) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    
        
        DefaultTableModel model = (DefaultTableModel)tEmployee.getModel();
        model.setRowCount(0);
        for(Directory dir : details.searchEmployee(name)){
           Object[] row = new Object[11];
           row[0] = dir;
           row[1] = dir.getEmployeeID();
           row[2] = dir.getAge();
           row[3] = dir.getGender();
           row[4] = dir.getStartDate();
           row[5] = dir.getLevel();
           row[6] = dir.getTeamInfo();
           row[7] = dir.getPositionTitle();
           row[8] = dir.getPhone();
           row[9] = dir.getEmail();
           row[10] = dir.getGender();  
           model.addRow(row);
        }
    
    }

       private void searchByID(int nameid) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    
        
          DefaultTableModel model = (DefaultTableModel)tEmployee.getModel();
          model.setRowCount(0);
          for(Directory dir : details.searchEmployeeID(nameid)){
          Object[] row = new Object[11];
          row[0] = dir;
          row[1] = dir.getEmployeeID();
          row[2] = dir.getAge();
          row[3] = dir.getGender();
          row[4] = dir.getStartDate();
          row[5] = dir.getLevel();
          row[6] = dir.getTeamInfo();
          row[7] = dir.getPositionTitle();
          row[8] = dir.getPhone();
          row[9] = dir.getEmail();
          row[10] = dir.getGender();  
          model.addRow(row);
           
        }
    }

    private void searchByPosTitle(String title) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    
         DefaultTableModel model = (DefaultTableModel)tEmployee.getModel();
        model.setRowCount(0);
        for(Directory dir : details.searchPositionTitle(title)){
           Object[] row = new Object[11];
           row[0] = dir;
           row[1] = dir.getEmployeeID();
           row[2] = dir.getAge();
           row[3] = dir.getGender();
           row[4] = dir.getStartDate();
           row[5] = dir.getLevel();
           row[6] = dir.getTeamInfo();
           row[7] = dir.getPositionTitle();
           row[8] = dir.getPhone();
           row[9] = dir.getEmail();
           row[10] = dir.getGender();  
           model.addRow(row);
    
    }
  }
}
